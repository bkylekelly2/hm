diff --git a/plugins/strtotime.inc b/plugins/strtotime.inc
index a4fb1e9..25149cd 100644
--- a/plugins/strtotime.inc
+++ b/plugins/strtotime.inc
@@ -8,7 +8,7 @@
 $plugin = array(
   'form' => 'feeds_tamper_strtotime_form',
   'callback' => 'feeds_tamper_strtotime_callback',
-  'name' => 'String to Unix timestamp',
+  'name' => 'String to Unix timestamp with English format',
   'multi' => 'loop',
   'category' => 'Date/time',
 );
@@ -16,7 +16,7 @@ $plugin = array(
 function feeds_tamper_strtotime_form($importer, $element_key, $settings) {
   $form = array();
   $form['html'] = array(
-    '#markup' => t('This will take a string containing an English date format and convert it into a Unix Timestamp.'),
+    '#markup' => t('This will take a string containing an English date format (like PHP function <a href="@strtotime-doc">strtotime</a>) and convert it into a Unix Timestamp.', array('@strtotime-doc' => 'http://php.net/manual/en/function.strtotime.php')),
   );
   return $form;
 }
diff --git a/plugins/strtotimeformat.inc b/plugins/strtotimeformat.inc
new file mode 100644
index 0000000..b48fa87
--- /dev/null
+++ b/plugins/strtotimeformat.inc
@@ -0,0 +1,36 @@
+<?php
+
+/**
+ * @file
+ * Convert string to timestamp.
+ */
+
+$plugin = array(
+  'form' => 'feeds_tamper_strtotimeformat_form',
+  'callback' => 'feeds_tamper_strtotimeformat_callback',
+  'name' => 'String to Unix timestamp with custom format',
+  'multi' => 'loop',
+  'category' => 'Date/time',
+);
+
+function feeds_tamper_strtotimeformat_form($importer, $element_key, $settings) {
+  $form = array();
+  $form['html'] = array(
+    '#markup' => t('This will take a string and convert it into a Unix Timestamp using custom date format.'),
+  );
+
+  $form['format'] = array(
+    '#type' => 'textfield',
+    '#title' => t('Format'),
+    '#required' => TRUE,
+    '#default_value' => $settings['format'],
+    '#description' => t('See the <a href="http://php.net/manual/en/datetime.createfromformat.php">DateTime::createFromFormat</a> documentation for more details.'),
+  );
+
+  return $form;
+}
+
+function feeds_tamper_strtotimeformat_callback($result, $item_key, $element_key, &$field, $settings, $source) {
+  $datetime = DateTime::createFromFormat('!' . $settings['format'], $field);
+  $field = $datetime ? $datetime->getTimestamp() : "";
+}
